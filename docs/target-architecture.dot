# http://www.graphviz.org/content/cluster

digraph msvisualization {
    node [shape=box,fillcolor=white,style=filled,fontname="Arial"];
    edge [fontname="Arial"]
    
    subgraph cluster_legend {
		label = "symbol explanation";
		fontname="Arial";
        library [shape=ellipse];
        service1 [shape=box];
				service2 [shape=box, label="service2"];
				service1 -> service2 [label="sync call", arrowhead=vee];
				service1 -> service2 [label="async flow", color=blue];
        service2 -> library [style=dashed, arrowhead=vee, label="use"];
        {rank = same; library; service1; service2;}
        color="#ffffcc";
				style=filled;
    }
    
    user [shape=egg];

	subgraph cluster_generic {
		msanalyzer [label="tadis-analyzer\n(microservice\n& npm package)"];
		msvisualizer [label="tadis-ui\n(microservice)"];
		#reactgraph [shape=ellipse,label="react-graph", style=filled, fillcolor="#ff8080"];

		#msvisualizer -> reactgraph [style=dashed, arrowhead=vee];

		
		label = "generic visualization";
		fontname="Arial";
		color="#ccffcc";
		style=filled;
	}

	subgraph cluster_external {
		k8s [label="kubernetes"];
		git;
		rabbitmq;

		label = "external services used";
		fontname="Arial";
		color="#e6e6e6";
		style=filled;
	}

	subgraph cluster_thirdparty {
		d3graphviz [shape=ellipse, label="d3-graphviz"]

		label = "third party";
		fontname="Arial";
		color="#e6e6e6";
		style=filled;
	}

	subgraph cluster_visualized_system {
		ms1 [label="ms 1"];
		ms2 [label="ms 2"];
		ci [shape=box, label="CI pipeline"];

		ms1 -> ms2 [color=blue];

		label = "visualized system";
		fontname="Arial";
		color="#e6e6e6";
		style=filled;
	}

	subgraph cluster_custom_visualization {
		source [shape=cylinder, label="source storage"];
		customanalyzer [label="tadis-analyzer\n-custom"];

		label = "custom visualization";
		fontname="Arial";
		color="#ffb3da";
		style=filled;
	}

	msanalyzer -> k8s [label="discover services,\nget env variables", arrowhead=vee];
	msanalyzer -> source [label="store,\nanalyze", arrowhead=vee];
	msanalyzer -> git [label="clone,\nfetch", arrowhead=vee];
	msanalyzer -> rabbitmq [label="get bindings", arrowhead=vee];
	msvisualizer -> msanalyzer [label="/collect/system", arrowhead=vee];
	ci -> ms1 [label="1. build", arrowhead=vee];
	ci -> msanalyzer [label="3. compute\nconsumer\nservices", arrowhead=vee];
	ci -> ms2 [label="4. trigger consumer\nintegration tests", arrowhead=vee];
	ci -> msanalyzer [label="2. update source", arrowhead=vee];
	user -> msvisualizer [label="browser\n/tadis/html", arrowhead=vee];
	user -> msanalyzer [label="update source\n(/collect/source)", arrowhead=vee];
	msvisualizer -> d3graphviz [style=dashed, arrowhead=vee, label="create svg"];
	#reactgraph -> graphviz [style=dashed, arrowhead=vee, label="compute layout"];
	customanalyzer -> msanalyzer [style=dashed, arrowhead=vee, label="import\nnpm package"];
}
